#!/bin/bash
TYPE=${1:-ce}
VERSION=${2:-2.4.2}
BASE_URL=${3:-magento2.test}

echo "Removing src & creating empty src folder..."
rm -rf src
mkdir -p src

echo "Restarting the containers..."
bin/stop
docker-compose -f docker-compose.yml up -d  #start without mount point to avoid non-empty folder issue
bin/stop
docker-compose -f docker-compose.yml up -d 
sleep 3 #Ensure containers are started...

if hash bin/clinotty composer 2>/dev/null; then
    PUBLIC_KEY="$(bin/clinotty composer config -gl | grep '\[http-basic.repo.magento.com.username\]' | cut -c40-)"
    PRIVATE_KEY="$(bin/clinotty composer config -gl | grep '\[http-basic.repo.magento.com.password\]' | cut -c40-)"
fi
bin/rootnotty chown -R app:app /var/www/.composer
bin/rootnotty chown -R app:app /var/www/html
if [ -z "$PUBLIC_KEY" ] || [ -z "$PRIVATE_KEY" ]; then
    exec < /dev/tty
    echo
    echo
    echo "    Authentication required (repo.magento.com, public_key and private_key):"
    read -p "        Username: " -e -i "21669500c00158b6a6ef9e36b3683b05" PUBLIC_KEY
    read -p "        Password: " -e -i "2b5fc6686d6466ddae957f3218e4ddec" PRIVATE_KEY
    echo
    if [ -n "$PUBLIC_KEY" ] && [ -n "$PRIVATE_KEY" ]; then
        read -p "    Add authentication information to host composer config? y/n: " ADD_AUTH
        echo
        if [[ $ADD_AUTH =~ ^[Yy]$ ]]; then
            bin/clinotty composer global config http-basic.repo.magento.com $PUBLIC_KEY $PRIVATE_KEY
        fi
        ADD_AUTH=''
    fi
    exec <&-
fi

echo "Installing magento 2 via composer..."
if [ "$TYPE" == "ee" ]
then
    echo "Installing EE version..."
    bin/clinotty composer create-project --repository-url=https://repo.magento.com/ magento/project-enterprise-edition=$VERSION ./
else
    echo "Installing CE version..."
    bin/clinotty composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=$VERSION ./
fi

echo "Running cli installation command...."
bin/clinotty chmod u+x bin/magento
bin/clinotty bin/magento setup:uninstall  #Make sure the database is clean
if [ "$TYPE" == "ee" ]
then
    bin/clinotty bin/magento setup:install \
    --cleanup-database \
    --db-host=db \
    --db-name=magento \
    --db-user=root \
    --db-password=magento \
    --base-url=https://$BASE_URL/ \
    --backend-frontname=admin \
    --admin-firstname=Ad \
    --admin-lastname=Min \
    --admin-email=admin@sm.local \
    --admin-user=admin \
    --admin-password=admin123 \
    --language=en_US \
    --currency=USD \
    --timezone=America/New_York \
    --amqp-host=rabbitmq \
    --amqp-port=5672 \
    --amqp-user=guest \
    --amqp-password=guest \
    --amqp-virtualhost=/ \
    --use-rewrites=1 \
    --elasticsearch-host=elasticsearch 
else
    bin/clinotty bin/magento setup:install \
    --cleanup-database \
    --db-host=db \
    --db-name=magento \
    --db-user=root \
    --db-password=magento \
    --base-url=https://$BASE_URL/ \
    --backend-frontname=admin \
    --admin-firstname=Ad \
    --admin-lastname=Min \
    --admin-email=admin@sm.local \
    --admin-user=admin \
    --admin-password=admin123 \
    --language=en_US \
    --currency=USD \
    --timezone=America/New_York \
    --use-rewrites=1 \
    --elasticsearch-host=elasticsearch
fi

echo "Turning on developer mode.."
bin/clinotty bin/magento deploy:mode:set developer

echo "Forcing deploy of static content to speed up initial requests..."
bin/clinotty bin/magento setup:static-content:deploy -f

echo "Enabling Redis for cache..."
bin/clinotty bin/magento setup:config:set --no-interaction --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0

echo "Enabling Redis for Full Page Cache..."
bin/clinotty bin/magento setup:config:set --no-interaction  --page-cache=redis --page-cache-redis-server=redis --page-cache-redis-db=1

echo "Enabling Redis for session..."
bin/clinotty bin/magento setup:config:set --no-interaction --session-save=redis --session-save-redis-host=redis --session-save-redis-log-level=4 --session-save-redis-db=2

echo "Re-indexing with Elasticsearch..."
bin/clinotty bin/magento indexer:reindex

echo "Clearing the cache to apply updates..."
bin/clinotty bin/magento cache:flush

echo "Copying files from container to host after install..."
bin/copyfromcontainer --all

echo "Generating SSL certificate..."
bin/setup-ssl $BASE_URL

echo "Create a DNS host entry for the site..."
echo "127.0.0.1 ::1 $BASE_URL" | sudo tee -a /etc/hosts

echo "Docker development environment setup complete."
echo "You may now access your Magento frontend instance at https://${BASE_URL}/"
echo "You may now access your Magento admin instance at https://${BASE_URL}/admin"
echo "Default admin user/password: admin/admin123"

